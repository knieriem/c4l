.TH "can_write.c" 3 "14 Sep 2001" "can4linux" \" -*- nroff -*-
.ad l
.nh
.SH NAME
can_write.c \-  
.SH SYNOPSIS
.br
.PP
.SS Functions

.in +1c
.ti -1c
.RI "__LDDK_WRITE_TYPE \fBcan_write\fR (__LDDK_WRITE_PARAM)"
.br
.RI "\fIsize_t write(int fd, const char *buf, size_t count); write CAN messages to the network.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
 
.PP
\fBAuthor(s): \fR
.in +1c
Heinz-Jürgen Oertel, port GmbH 
.PP
\fBRevision: \fR
.in +1c
 1.3  
.PP
\fBDate: \fR
.in +1c
 2001/09/04 15:51:44 
.PP
.SH FUNCTION DOCUMENTATION
.PP 
.SS __LDDK_WRITE_TYPE can_write (__LDDK_WRITE_PARAM)
.PP
size_t write(int fd, const char *buf, size_t count); write CAN messages to the network.
.PP
\fBParameters: \fR
.in +1c
.TP
\fB\fIfd\fR\fR
The descriptor to write to. 
.TP
\fB\fIbuf\fR\fR
The data buffer to write (array of CAN \fBcanmsg_t\fR). 
.TP
\fB\fIcount\fR\fR
The number of bytes to write.
.PP
write writes up to \fIcount\fR CAN messages to the CAN controller referenced by the file descriptor fd from the buffer starting at buf.
.PP
\fBErrors\fR
.in +1c
the following errors can occur
.PP
.TP
 \fCEBADF\fR fd is not a valid file descriptor or is not open for writing.
.TP
 \fCEINVAL\fR fd is attached to an object which is unsuitable for writing.
.TP
 \fCEFAULT\fR buf is outside your accessible address space.
.TP
 \fCEINTR\fR The call was interrupted by a signal before any data was written.
.PP
\fBReturns: \fR
.in +1c
On success, the number of CAN messages written are returned (zero indicates nothing was written). On error, -1 is returned, and errno is set appropriately.
.PP
For internal use only.
.SH AUTHOR
.PP 
Generated automatically by Doxygen for can4linux from the source code.