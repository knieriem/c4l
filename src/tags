!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/darren@hiebert.com/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.1	//
AccCode	can_sysctl.c	/^unsigned int AccCode[4] = { 0xffffffff ,0xffffffff ,0xffffffff ,0xffffffff };$/;"	v
AccMask	can_sysctl.c	/^unsigned int AccMask[4] = { 0xffffffff ,0xffffffff ,0xffffffff ,0xffffffff };$/;"	v
BUF_EMPTY	can_defs.h	294;"	d
BUF_FULL	can_defs.h	296;"	d
BUF_OK	can_defs.h	295;"	d
BUF_OVERRUN	can_defs.h	297;"	d
BUF_UNDERRUN	can_defs.h	298;"	d
Base	can_sysctl.c	/^int Base[4] = { 0, 0, 0, 0 };$/;"	v
Baud	can_sysctl.c	/^int Baud[4] = { 125, 125, 125, 125 };$/;"	v
CAN_ABORT_TRANSMISSION	can_82c200.h	251;"	d
CAN_ACC_FILT_MASK	can_82c200.h	205;"	d
CAN_ACC_FILT_MASK_BIT	can_82c200.h	213;"	d
CAN_ARBITR_LOST_INT_ENABLE	can_82c200.h	221;"	d
CAN_BUS_STATUS	can_82c200.h	256;"	d
CAN_BUS_STATUS_BIT	can_82c200.h	267;"	d
CAN_CLEAR_OVERRUN_STATUS	can_82c200.h	249;"	d
CAN_ChipReset	can_82c200funcs.c	/^int CAN_ChipReset (int board)$/;"	f
CAN_DATA_OVERRUN	can_82c200.h	262;"	d
CAN_DATA_OVERRUN_BIT	can_82c200.h	273;"	d
CAN_EFF	can_82c200.h	230;"	d
CAN_ERROR_BUSOFF_INT_ENABLE	can_82c200.h	220;"	d
CAN_ERROR_INT	can_82c200.h	280;"	d
CAN_ERROR_INT_ENABLE	can_82c200.h	225;"	d
CAN_ERROR_INT_ENABLE	can_82c200.h	240;"	d
CAN_ERROR_PASSIVE_INT_ENABLE	can_82c200.h	222;"	d
CAN_ERROR_STATUS	can_82c200.h	257;"	d
CAN_ERROR_STATUS_BIT	can_82c200.h	268;"	d
CAN_GOTO_SLEEP	can_82c200.h	248;"	d
CAN_GetMessage	can_82c200funcs.c	/^int CAN_GetMessage (int board, canmsg_t *rx )$/;"	f
CAN_Interrupt	can_82c200funcs.c	/^void CAN_Interrupt ( int irq, void *dev_id, struct pt_regs *ptregs )$/;"	f
CAN_LISTEN_ONLY_MODE	can_82c200.h	207;"	d
CAN_LISTEN_ONLY_MODE_BIT	can_82c200.h	215;"	d
CAN_MODE_BASICCAN	can_82c200.h	324;"	d
CAN_MODE_CLK	can_82c200.h	326;"	d
CAN_MODE_CLK2	can_82c200.h	327;"	d
CAN_MODE_DEF	can_82c200.h	209;"	d
CAN_MODE_PELICAN	can_82c200.h	325;"	d
CAN_MSG_LENGTH	can4linux.h	59;"	d
CAN_OCMODE0	can_82c200.h	320;"	d
CAN_OCMODE1	can_82c200.h	319;"	d
CAN_OCPOL0	can_82c200.h	318;"	d
CAN_OCPOL1	can_82c200.h	315;"	d
CAN_OCTN0	can_82c200.h	317;"	d
CAN_OCTN1	can_82c200.h	314;"	d
CAN_OCTP0	can_82c200.h	316;"	d
CAN_OCTP1	can_82c200.h	313;"	d
CAN_OUTC_VAL	can_defs.h	274;"	d
CAN_OVERRUN_INT	can_82c200.h	279;"	d
CAN_OVERRUN_INT_ENABLE	can_82c200.h	224;"	d
CAN_OVERRUN_INT_ENABLE	can_82c200.h	239;"	d
CAN_RANGE	can_82c200.h	199;"	d
CAN_RECEIVE_BUFFER_STATUS	can_82c200.h	263;"	d
CAN_RECEIVE_BUFFER_STATUS_BIT	can_82c200.h	274;"	d
CAN_RECEIVE_INT	can_82c200.h	282;"	d
CAN_RECEIVE_INT_ENABLE	can_82c200.h	227;"	d
CAN_RECEIVE_INT_ENABLE	can_82c200.h	242;"	d
CAN_RECEIVE_STATUS	can_82c200.h	259;"	d
CAN_RECEIVE_STATUS_BIT	can_82c200.h	270;"	d
CAN_RELEASE_RECEIVE_BUFFER	can_82c200.h	250;"	d
CAN_RESET_REQUEST	can_82c200.h	208;"	d
CAN_RESET_REQUEST	can_82c200.h	243;"	d
CAN_RESET_REQUEST_BIT	can_82c200.h	216;"	d
CAN_RTR	can_82c200.h	336;"	d
CAN_RTR	can_82c200.h	338;"	d
CAN_SELF_TEST_MODE	can_82c200.h	206;"	d
CAN_SELF_TEST_MODE_BIT	can_82c200.h	214;"	d
CAN_SFF	can_82c200.h	231;"	d
CAN_SLEEP_MODE	can_82c200.h	204;"	d
CAN_SLEEP_MODE_BIT	can_82c200.h	212;"	d
CAN_SPEED_MODE	can_82c200.h	238;"	d
CAN_SendMessage	can_82c200funcs.c	/^int CAN_SendMessage (int board, canmsg_t *tx, int wait)$/;"	f
CAN_SetMask	can_82c200funcs.c	/^int CAN_SetMask (int board, unsigned int code, unsigned int mask)$/;"	f
CAN_SetOMode	can_82c200funcs.c	/^int CAN_SetOMode (int board, int arg)$/;"	f
CAN_SetTiming	can_82c200funcs.c	/^int CAN_SetTiming (int board, int baud)$/;"	f
CAN_ShowStat	can_82c200funcs.c	/^int CAN_ShowStat (int board)$/;"	f
CAN_StartChip	can_82c200funcs.c	/^int CAN_StartChip (int board)$/;"	f
CAN_StopChip	can_82c200funcs.c	/^int CAN_StopChip (int board)$/;"	f
CAN_TEST_MODE	can_82c200.h	237;"	d
CAN_TIM0_1000K	can_82c200.h	365;"	d
CAN_TIM0_100K	can_82c200.h	355;"	d
CAN_TIM0_10K	can_82c200.h	347;"	d
CAN_TIM0_125K	can_82c200.h	357;"	d
CAN_TIM0_20K	can_82c200.h	349;"	d
CAN_TIM0_250K	can_82c200.h	359;"	d
CAN_TIM0_40K	can_82c200.h	351;"	d
CAN_TIM0_500K	can_82c200.h	361;"	d
CAN_TIM0_50K	can_82c200.h	353;"	d
CAN_TIM0_800K	can_82c200.h	363;"	d
CAN_TIM1_1000K	can_82c200.h	366;"	d
CAN_TIM1_100K	can_82c200.h	356;"	d
CAN_TIM1_10K	can_82c200.h	348;"	d
CAN_TIM1_125K	can_82c200.h	358;"	d
CAN_TIM1_20K	can_82c200.h	350;"	d
CAN_TIM1_250K	can_82c200.h	360;"	d
CAN_TIM1_40K	can_82c200.h	352;"	d
CAN_TIM1_500K	can_82c200.h	362;"	d
CAN_TIM1_50K	can_82c200.h	354;"	d
CAN_TIM1_800K	can_82c200.h	364;"	d
CAN_TRANSMISSION_COMPLETE_STATUS	can_82c200.h	260;"	d
CAN_TRANSMISSION_COMPLETE_STATUS_BIT	can_82c200.h	271;"	d
CAN_TRANSMISSION_REQUEST	can_82c200.h	252;"	d
CAN_TRANSMIT_BUFFER_ACCESS	can_82c200.h	261;"	d
CAN_TRANSMIT_BUFFER_ACCESS_BIT	can_82c200.h	272;"	d
CAN_TRANSMIT_INT	can_82c200.h	281;"	d
CAN_TRANSMIT_INT_ENABLE	can_82c200.h	226;"	d
CAN_TRANSMIT_INT_ENABLE	can_82c200.h	241;"	d
CAN_TRANSMIT_STATUS	can_82c200.h	258;"	d
CAN_TRANSMIT_STATUS_BIT	can_82c200.h	269;"	d
CAN_VendorInit	can_82c200funcs.c	/^int CAN_VendorInit (int minor)$/;"	f
CAN_WAKEUP_INT	can_82c200.h	278;"	d
CAN_WAKEUP_INT_ENABLE	can_82c200.h	223;"	d
CANin	can_defs.h	535;"	d
CANin	can_defs.h	579;"	d
CANout	can_defs.h	528;"	d
CANout	can_defs.h	532;"	d
CANout	can_defs.h	551;"	d
CANout	can_defs.h	570;"	d
CANreset	can_defs.h	540;"	d
CANreset	can_defs.h	562;"	d
CANreset	can_defs.h	575;"	d
CANset	can_defs.h	537;"	d
CANset	can_defs.h	555;"	d
CANset	can_defs.h	572;"	d
CANtest	can_defs.h	543;"	d
CANtest	can_defs.h	581;"	d
CMD_RESET	can4linux.h	168;"	d
CMD_START	can4linux.h	166;"	d
CMD_STOP	can4linux.h	167;"	d
COMMAND	can4linux.h	94;"	d
CONFIG	can4linux.h	95;"	d
CONFIGURERTR	can4linux.h	98;"	d
CONF_ACC	can4linux.h	174;"	d
CONF_ACCC	can4linux.h	176;"	d
CONF_ACCM	can4linux.h	175;"	d
CONF_FDISABLE	can4linux.h	181;"	d
CONF_FENABLE	can4linux.h	180;"	d
CONF_FILTER	can4linux.h	179;"	d
CONF_OMODE	can4linux.h	178;"	d
CONF_TIMING	can4linux.h	177;"	d
CPC_OUTC_VAL	can_defs.h	275;"	d
CanSja1000Status_par	can4linux.h	/^typedef struct CanSja1000Status_par { $/;"	s
CanSja1000Status_par_t	can4linux.h	/^} CanSja1000Status_par_t;$/;"	t
CanTiming	can_82c200funcs.c	/^uint8 CanTiming[10][2]={$/;"	v
CanWait	CanWait.c	/^        wake_up_interruptible(  &CanWait[minor] ); $/;"	v
CanWait	can_util.c	/^ struct wait_queue *CanWait[MAX_BUFS];$/;"	v
CanWait	can_util.c	/^ wait_queue_head_t CanWait[MAX_BUFS];$/;"	v
Can_ConfigRTR	can_util.c	/^int Can_ConfigRTR( int minor, unsigned message, canmsg_t *Tx )$/;"	f
Can_FifoInit	can_util.c	/^int Can_FifoInit(int minor)$/;"	f
Can_FilterCleanup	can_util.c	/^int Can_FilterCleanup(int minor)$/;"	f
Can_FilterInit	can_util.c	/^int Can_FilterInit(int minor)$/;"	f
Can_FilterMessage	can_util.c	/^int Can_FilterMessage(int minor, unsigned message, unsigned enable) {$/;"	f
Can_FilterOnOff	can_util.c	/^int Can_FilterOnOff(int minor, unsigned on) {$/;"	f
Can_FilterSigNo	can_util.c	/^int Can_FilterSigNo(int minor, unsigned signo, unsigned signal ) {$/;"	f
Can_FilterSignal	can_util.c	/^int Can_FilterSignal(int minor, unsigned id, unsigned signal) {$/;"	f
Can_FilterTimestamp	can_util.c	/^int Can_FilterTimestamp(int minor, unsigned message, unsigned stamp) {$/;"	f
Can_FreeIrq	can_util.c	/^int Can_FreeIrq(int minor, int irq )$/;"	f
Can_MAJOR	can_defs.h	467;"	d
Can_RequestIrq	can_util.c	/^int Can_RequestIrq(int minor, int irq, irq_handler_t handler)$/;"	f
Can_StartTimer	can_util.c	/^void Can_StartTimer(unsigned long v)$/;"	f
Can_StopTimer	can_util.c	/^void Can_StopTimer(void)$/;"	f
Can_Timeout	can_util.c	/^int Can_Timeout = 0;$/;"	v
Can_Timer	can_util.c	/^struct timer_list Can_Timer;$/;"	v
Can_TimerInterrupt	can_util.c	/^void Can_TimerInterrupt(unsigned long unused)$/;"	f
Can_UnConfigRTR	can_util.c	/^int Can_UnConfigRTR( int minor, unsigned message )$/;"	f
Can_WaitInit	can_util.c	/^int Can_WaitInit(int minor)$/;"	f
Can_dointvec	can_sysctl.c	/^int Can_dointvec(ctl_table *table, int write, struct file *filp,$/;"	f
Can_dointvec	can_sysctl.c	53;"	d	file:
Can_dostring	can_sysctl.c	/^int Can_dostring(ctl_table *table, int write, struct file *filp,$/;"	f
Can_dostring	can_sysctl.c	54;"	d	file:
Can_dump	can_util.c	/^void Can_dump(int minor)$/;"	f
Can_errno	Can_error.c	/^int Can_errno = 0;$/;"	v
Can_isopen	can_open.c	/^int Can_isopen[4] = { 0, 0, 0, 0};   \/* device minor already opened *\/$/;"	v
Can_major	can_core.c	/^    int Can_major = Can_MAJOR; $/;"	v
Can_minors	can_util.c	/^int Can_minors[4]   = {0, 1, 2, 3};		\/* used as IRQ dev_id *\/$/;"	v
Can_pitapci_control	can_util.c	/^u32 Can_pitapci_control[4];$/;"	v
Can_sys_table	can_sysctl.c	/^ctl_table Can_sys_table[] = {$/;"	v
Can_sysctl_string	can_sysctl.c	/^int Can_sysctl_string(ctl_table *table, int *name, int nlen,$/;"	f
Can_sysctl_string	can_sysctl.c	55;"	d	file:
Can_sysctl_table	can_sysctl.c	/^ctl_table Can_sysctl_table[] = {$/;"	v
Can_systable	can_sysctl.c	/^struct ctl_table_header *Can_systable;$/;"	v
Cnt1	can_sysctl.c	/^int Cnt1[4] = { 0x0 ,0x0 ,0x0 ,0x0 };$/;"	v
Cnt2	can_sysctl.c	/^int Cnt2[4] = { 0x0 ,0x0 ,0x0 ,0x0 };$/;"	v
Command_par	can4linux.h	/^typedef struct Command_par {$/;"	s
Command_par_t	can4linux.h	/^} Command_par_t ;$/;"	t
Config_par	can4linux.h	/^typedef struct Config_par {$/;"	s
Config_par_t	can4linux.h	/^} Config_par_t ;$/;"	t
ConfigureRTR_par	can4linux.h	/^typedef struct ConfigureRTR_par {$/;"	s
ConfigureRTR_par_t	can4linux.h	/^} ConfigureRTR_par_t ;$/;"	t
DBG_1PPL	can_debug.h	16;"	d
DBG_ALL	can_debug.h	8;"	d
DBG_BRANCH	can_debug.h	11;"	d
DBG_DATA	can_debug.h	12;"	d
DBG_ENTRY	can_debug.h	9;"	d
DBG_EXIT	can_debug.h	10;"	d
DBG_INTR	can_debug.h	13;"	d
DBG_REG	can_debug.h	14;"	d
DBG_SPEC	can_debug.h	15;"	d
DBGin	can_debug.h	29;"	d
DBGin	can_debug.h	36;"	d
DBGout	can_debug.h	30;"	d
DBGout	can_debug.h	37;"	d
DBGprint	can_debug.h	27;"	d
DBGprint	can_debug.h	35;"	d
DEBUG_TTY	can_debug.h	32;"	d
DEBUG_TTY	can_debug.h	38;"	d
DRIVER_NAME	can_debug.h	6;"	d
Error	Can_error.c	/^int Error(int err)$/;"	f
ExtID	can_sysctl.c	/^char ExtID[] = "nnnn ";$/;"	v
IOModel	can_sysctl.c	/^char IOModel[] = "pppp ";$/;"	v
IRQ	can_sysctl.c	/^int IRQ[4] = { 0x0 ,0x0 ,0x0 ,0x0 };$/;"	v
IRQ_requested	can_util.c	/^int IRQ_requested[] = {0, 0, 0, 0};$/;"	v
KERNEL_VERSION	can_defs.h	63;"	d
LDDK_RETURN	can_defs.h	473;"	d
LDDK_RETURN	can_defs.h	475;"	d
LDDK_START_TIMER	can_defs.h	355;"	d
LDDK_STOP_TIMER	can_defs.h	356;"	d
LDDK_TIMEDOUT	can_defs.h	357;"	d
LDDK_USE_REGISTER	can_core.c	215;"	d	file:
LDDK_USE_SYSCTL	can_defs.h	363;"	d
MAX_BUFS	can_defs.h	289;"	d
MAX_BUFSIZE	can_defs.h	291;"	d
MAX_ID_LENGTH	can_defs.h	313;"	d
MAX_ID_NUMBER	can_defs.h	314;"	d
MODULE	can_defs.h	59;"	d
MSG_	can4linux.h	67;"	d
MSG_BOVR	can4linux.h	68;"	d
MSG_BUSOFF	can4linux.h	66;"	d
MSG_ERR_MASK	can4linux.h	72;"	d
MSG_EXT	can4linux.h	64;"	d
MSG_OVR	can4linux.h	63;"	d
MSG_PASSIVE	can4linux.h	65;"	d
MSG_RTR	can4linux.h	62;"	d
Outc	can_sysctl.c	/^int Outc[4] = { 0x0 ,0x0 ,0x0 ,0x0 };$/;"	v
Overrun	can_sysctl.c	/^int Overrun[4] = { 0x0 ,0x0 ,0x0 ,0x0 };$/;"	v
PCCAN_OUTC_VAL	can_defs.h	276;"	d
PCI_DEVICE	can_defs.h	129;"	d
PCI_VENDOR	can_defs.h	128;"	d
PROC_VER_LENGTH	can_defs.h	156;"	d
RECEIVE	can4linux.h	97;"	d
REG_OFFSET	can_util.c	302;"	d	file:
REG_OFFSET	can_util.c	304;"	d	file:
R_OFF	can_82c200funcs.c	301;"	d	file:
R_OFF	can_82c200funcs.c	303;"	d	file:
Receive_par	can4linux.h	/^typedef struct Receive_par {$/;"	s
Receive_par_t	can4linux.h	/^} Receive_par_t ;$/;"	t
Rx	can4linux.h	/^    canmsg_t *Rx;		\/**< CAN message struct  *\/$/;"	m	struct:Receive_par
RxErr	can_sysctl.c	/^int RxErr[4] = { 0x0 ,0x0 ,0x0 ,0x0 };$/;"	v
Rx_Buf	can_util.c	/^msg_fifo_t   Rx_Buf[MAX_BUFS];$/;"	v
Rx_Filter	can_util.c	/^    msg_filter_t Rx_Filter[MAX_BUFS]; $/;"	v
SEND	can4linux.h	96;"	d
SLOW_DOWN_IO	can_defs.h	186;"	d
SLOW_DOWN_IO	can_defs.h	218;"	d
STATUS	can4linux.h	99;"	d
SYSCTL_ACCCODE	can_defs.h	415;"	d
SYSCTL_ACCMASK	can_defs.h	420;"	d
SYSCTL_BASE	can_defs.h	405;"	d
SYSCTL_BAUD	can_defs.h	410;"	d
SYSCTL_CNT1	can_defs.h	456;"	d
SYSCTL_CNT2	can_defs.h	458;"	d
SYSCTL_Can	can_sysctl.c	63;"	d	file:
SYSCTL_DBGMASK	can_defs.h	452;"	d
SYSCTL_EXTID	can_defs.h	395;"	d
SYSCTL_IOMODEL	can_defs.h	380;"	d
SYSCTL_IRQ	can_defs.h	400;"	d
SYSCTL_OUTC	can_defs.h	430;"	d
SYSCTL_OVERRUN	can_defs.h	445;"	d
SYSCTL_RXERR	can_defs.h	440;"	d
SYSCTL_TIMEOUT	can_defs.h	425;"	d
SYSCTL_TXERR	can_defs.h	435;"	d
SYSCTL_TXSPEED	can_defs.h	385;"	d
SYSCTL_VENDOPT	can_defs.h	390;"	d
SYSCTL_VERSION	can_defs.h	375;"	d
Send_par	can4linux.h	/^typedef struct Send_par {$/;"	s
Send_par_t	can4linux.h	/^} Send_par_t ;$/;"	t
TMPBUFLEN	can_sysctl.c	187;"	d	file:
Timeout	can_sysctl.c	/^int Timeout[4] = { 0x64 ,0x64 ,0x64 ,0x64 };$/;"	v
Tx	can4linux.h	/^    canmsg_t *Tx;		\/**< CAN message struct  *\/$/;"	m	struct:ConfigureRTR_par
Tx	can4linux.h	/^    canmsg_t *Tx;		\/**< CAN message struct  *\/$/;"	m	struct:Send_par
TxErr	can_sysctl.c	/^int TxErr[4] = { 0x0 ,0x0 ,0x0 ,0x0 };$/;"	v
TxSpeed	can_sysctl.c	/^char TxSpeed[] = "ffff ";$/;"	v
Tx_Buf	can_util.c	/^msg_fifo_t   Tx_Buf[MAX_BUFS];$/;"	v
VERSION_CODE	can_util.c	40;"	d	file:
VendOpt	can_sysctl.c	/^char VendOpt[] = "nnnn ";$/;"	v
_BUS_TYPE	can_defs.h	126;"	d
_BUS_TYPE	can_defs.h	132;"	d
__CAN_H	can4linux.h	51;"	d
__CAN_TYPE__	can_defs.h	139;"	d
__CAN_TYPE__	can_defs.h	141;"	d
__CAN_TYPE__	can_defs.h	147;"	d
__CAN_TYPE__	can_defs.h	149;"	d
__DEBUG_INCLUDED	can_debug.h	43;"	d
__LDDK_CCHECK_PARAM	can_defs.h	179;"	d
__LDDK_CCHECK_PARAM	can_defs.h	211;"	d
__LDDK_CCHECK_PARAM	can_defs.h	242;"	d
__LDDK_CLOSE_PARAM	can_defs.h	176;"	d
__LDDK_CLOSE_PARAM	can_defs.h	208;"	d
__LDDK_CLOSE_PARAM	can_defs.h	239;"	d
__LDDK_CLOSE_TYPE	can_defs.h	161;"	d
__LDDK_CLOSE_TYPE	can_defs.h	197;"	d
__LDDK_CLOSE_TYPE	can_defs.h	225;"	d
__LDDK_FASYNC_PARAM	can_defs.h	178;"	d
__LDDK_FASYNC_PARAM	can_defs.h	210;"	d
__LDDK_FASYNC_PARAM	can_defs.h	241;"	d
__LDDK_FLUSH_PARAM	can_defs.h	175;"	d
__LDDK_FLUSH_PARAM	can_defs.h	207;"	d
__LDDK_FSYNC_PARAM	can_defs.h	177;"	d
__LDDK_FSYNC_PARAM	can_defs.h	209;"	d
__LDDK_FSYNC_PARAM	can_defs.h	240;"	d
__LDDK_INO_MINOR	can_defs.h	183;"	d
__LDDK_INO_MINOR	can_defs.h	215;"	d
__LDDK_INO_MINOR	can_defs.h	246;"	d
__LDDK_IOCTL_PARAM	can_defs.h	172;"	d
__LDDK_IOCTL_PARAM	can_defs.h	204;"	d
__LDDK_IOCTL_PARAM	can_defs.h	236;"	d
__LDDK_IOCTL_TYPE	can_defs.h	164;"	d
__LDDK_IOCTL_TYPE	can_defs.h	195;"	d
__LDDK_IOCTL_TYPE	can_defs.h	228;"	d
__LDDK_MINOR	can_defs.h	182;"	d
__LDDK_MINOR	can_defs.h	214;"	d
__LDDK_MINOR	can_defs.h	245;"	d
__LDDK_MMAP_PARAM	can_defs.h	173;"	d
__LDDK_MMAP_PARAM	can_defs.h	205;"	d
__LDDK_MMAP_PARAM	can_defs.h	237;"	d
__LDDK_OPEN_PARAM	can_defs.h	174;"	d
__LDDK_OPEN_PARAM	can_defs.h	206;"	d
__LDDK_OPEN_PARAM	can_defs.h	238;"	d
__LDDK_OPEN_TYPE	can_defs.h	163;"	d
__LDDK_OPEN_TYPE	can_defs.h	196;"	d
__LDDK_OPEN_TYPE	can_defs.h	227;"	d
__LDDK_READDIR_PARAM	can_defs.h	170;"	d
__LDDK_READDIR_PARAM	can_defs.h	202;"	d
__LDDK_READDIR_PARAM	can_defs.h	234;"	d
__LDDK_READ_PARAM	can_defs.h	168;"	d
__LDDK_READ_PARAM	can_defs.h	200;"	d
__LDDK_READ_PARAM	can_defs.h	232;"	d
__LDDK_READ_TYPE	can_defs.h	162;"	d
__LDDK_READ_TYPE	can_defs.h	192;"	d
__LDDK_READ_TYPE	can_defs.h	226;"	d
__LDDK_REVAL_PARAM	can_defs.h	180;"	d
__LDDK_REVAL_PARAM	can_defs.h	212;"	d
__LDDK_REVAL_PARAM	can_defs.h	243;"	d
__LDDK_SEEK_PARAM	can_defs.h	167;"	d
__LDDK_SEEK_PARAM	can_defs.h	199;"	d
__LDDK_SEEK_PARAM	can_defs.h	231;"	d
__LDDK_SELECT_PARAM	can_defs.h	171;"	d
__LDDK_SELECT_PARAM	can_defs.h	203;"	d
__LDDK_SELECT_PARAM	can_defs.h	235;"	d
__LDDK_SELECT_TYPE	can_defs.h	165;"	d
__LDDK_SELECT_TYPE	can_defs.h	194;"	d
__LDDK_SELECT_TYPE	can_defs.h	229;"	d
__LDDK_WRITE_PARAM	can_defs.h	169;"	d
__LDDK_WRITE_PARAM	can_defs.h	201;"	d
__LDDK_WRITE_PARAM	can_defs.h	233;"	d
__LDDK_WRITE_TYPE	can_defs.h	160;"	d
__LDDK_WRITE_TYPE	can_defs.h	193;"	d
__LDDK_WRITE_TYPE	can_defs.h	224;"	d
__NO_VERSION__	can_defs.h	58;"	d
__lddk_copy_from_user	can_defs.h	104;"	d
__lddk_copy_from_user	can_defs.h	111;"	d
__lddk_copy_to_user	can_defs.h	105;"	d
__lddk_copy_to_user	can_defs.h	112;"	d
active	can_defs.h	/^	int active;$/;"	m	struct:
addresses	can_util.c	/^static u32 addresses[] = {$/;"	v	file:
arbitrationlost	can_82c200.h	/^	uint8	 arbitrationlost;	\/* read only *\/$/;"	m	struct:canregs
baud	can4linux.h	/^    unsigned int baud;			\/**< actual bit rate *\/$/;"	m	struct:CanSja1000Status_par
can_Command	can_ioctl.c	/^int can_Command(struct inode *inode, int cmd)$/;"	f
can_Config	can_ioctl.c	/^int can_Config($/;"	f
can_GetStat	can_82c200funcs.c	/^int can_GetStat($/;"	f
can_Receive	can_ioctl.c	/^int can_Receive($/;"	f
can_Send	can_ioctl.c	/^int can_Send(struct inode *inode, canmsg_t *Tx)$/;"	f
can_base	can_util.c	/^unsigned char *can_base[4];			\/* ioremapped adresses *\/$/;"	v
can_close	can_close.c	/^__LDDK_CLOSE_TYPE can_close ( __LDDK_CLOSE_PARAM )$/;"	f
can_fops	can_core.c	/^struct file_operations can_fops = { $/;"	v
can_ioctl	can_ioctl.c	/^int can_ioctl( __LDDK_IOCTL_PARAM )$/;"	f
can_open	can_open.c	/^int can_open( __LDDK_OPEN_PARAM )$/;"	f
can_range	can_util.c	/^unsigned int can_range[4];			\/* ioremapped adresses *\/$/;"	v
can_read	can_read.c	/^int can_read( __LDDK_READ_PARAM )$/;"	f
can_select	can_select.c	/^unsigned int can_select( __LDDK_SELECT_PARAM )$/;"	f
can_write	can_write.c	/^__LDDK_WRITE_TYPE can_write( __LDDK_WRITE_PARAM )$/;"	f
canacc	can_82c200.h	/^	uint8	 canacc;$/;"	m	struct:canregs
canclk	can_82c200.h	/^	uint8	 canclk; 	 $/;"	m	struct:canregs
cancmd	can_82c200.h	/^	uint8    cancmd;$/;"	m	struct:canregs
canctl	can_82c200.h	/^	uint8    canctl;$/;"	m	struct:canregs
candata	can_82c200.h	/^	    uint8    candata[8*4];$/;"	m	struct:frame::<anonymous>
candata	can_82c200.h	/^	    uint8    candata[8];$/;"	m	struct:frame::<anonymous>
canid1	can_82c200.h	/^	    uint8	 canid1;$/;"	m	struct:frame::<anonymous>
canid2	can_82c200.h	/^	    uint8	 canid2;$/;"	m	struct:frame::<anonymous>
canid3	can_82c200.h	/^	    uint8	 canid3;$/;"	m	struct:frame::<anonymous>
canid4	can_82c200.h	/^	    uint8	 canid4;$/;"	m	struct:frame::<anonymous>
canirq	can_82c200.h	/^	uint8	 canirq;$/;"	m	struct:canregs
canirq_enable	can_82c200.h	/^	uint8	 canirq_enable;$/;"	m	struct:canregs
canmask	can_82c200.h	/^	uint8	 canmask;$/;"	m	struct:canregs
canmode	can_82c200.h	/^	uint8    canmode;		\/* 0 *\/$/;"	m	struct:canregs
canmode	can_82c200funcs.c	164;"	d	file:
canmsg_t	can4linux.h	/^} canmsg_t;$/;"	t
canoutc	can_82c200.h	/^	uint8	 canoutc;$/;"	m	struct:canregs
canregs	can_82c200.h	/^typedef struct canregs {$/;"	s
canregs_t	can_82c200.h	/^} canregs_t;$/;"	t
canrxbufferadr	can_82c200.h	/^	uint8	 canrxbufferadr		\/* 30 *\/;$/;"	m	struct:canregs
canrxdata	can_82c200.h	/^	uint8    canrxdata[8];$/;"	m	struct:canregs
canrxdes1	can_82c200.h	/^	uint8	 canrxdes1;$/;"	m	struct:canregs
canrxdes2	can_82c200.h	/^	uint8    canrxdes2;$/;"	m	struct:canregs
canstat	can_82c200.h	/^	uint8    canstat;$/;"	m	struct:canregs
cantest	can_82c200.h	/^	uint8	 cantest;$/;"	m	struct:canregs
cantim0	can_82c200.h	/^	uint8	 cantim0;$/;"	m	struct:canregs
cantim1	can_82c200.h	/^	uint8	 cantim1;$/;"	m	struct:canregs
cantxdata	can_82c200.h	/^	uint8    cantxdata[8];$/;"	m	struct:canregs
cantxdes1	can_82c200.h	/^	uint8	 cantxdes1;$/;"	m	struct:canregs
cantxdes2	can_82c200.h	/^	uint8	 cantxdes2;$/;"	m	struct:canregs
canxdata	can_82c200.h	/^	    uint8    canxdata[8*4];$/;"	m	struct:frame::<anonymous>
canxdata	can_82c200.h	/^	    uint8    canxdata[8];$/;"	m	struct:frame::<anonymous>
cleanup_module	can_core.c	/^void cleanup_module(void)$/;"	f
cmd	can4linux.h	/^    int cmd;			\/**< special driver command *\/$/;"	m	struct:Command_par
cob	can4linux.h	/^    int             cob;	 \/**< CAN object number, used in Full CAN  *\/$/;"	m	struct:
controller_available	can_util.c	/^int controller_available(unsigned long address, int offset)$/;"	f
data	can4linux.h	/^    unsigned   char data[CAN_MSG_LENGTH]; \/**< data, 0...8 bytes *\/$/;"	m	struct:
data	can_defs.h	/^        canmsg_t data[MAX_BUFSIZE];$/;"	m	struct:
dbgMask	Can_debug.c	/^  unsigned int   dbgMask  = \\$/;"	v
dbgMask	Can_debug.c	/^unsigned int   dbgMask  = 0;$/;"	v
dummy01	can_82c200.h	/^	    uint8	 			dummy01;$/;"	m	struct:frame::<anonymous>
dummy01	can_82c200.h	/^	uint8	 			dummy01;$/;"	m	struct:canregs
dummy02	can_82c200.h	/^	    uint8	 			dummy02;$/;"	m	struct:frame::<anonymous>
dummy02	can_82c200.h	/^	uint8	 			dummy02;$/;"	m	struct:canregs
dummy03	can_82c200.h	/^	    uint8	 			dummy03;$/;"	m	struct:frame::<anonymous>
dummy03	can_82c200.h	/^	uint8	 			dummy03;$/;"	m	struct:canregs
dummy04	can_82c200.h	/^	    uint8	 			dummy04;$/;"	m	struct:frame::<anonymous>
dummy04	can_82c200.h	/^	uint8	 			dummy04;$/;"	m	struct:canregs
dummy05	can_82c200.h	/^	    uint8	 			dummy05;$/;"	m	struct:frame::<anonymous>
dummy05	can_82c200.h	/^	uint8	 			dummy05;$/;"	m	struct:canregs
dummy06	can_82c200.h	/^	    uint8	 			dummy06;$/;"	m	struct:frame::<anonymous>
dummy06	can_82c200.h	/^	uint8	 			dummy06;$/;"	m	struct:canregs
dummy07	can_82c200.h	/^	    uint8	 			dummy07;$/;"	m	struct:frame::<anonymous>
dummy07	can_82c200.h	/^	uint8	 			dummy07;$/;"	m	struct:canregs
dummy08	can_82c200.h	/^	    uint8	 			dummy08;$/;"	m	struct:frame::<anonymous>
dummy08	can_82c200.h	/^	uint8	 			dummy08;$/;"	m	struct:canregs
dummy09	can_82c200.h	/^	    uint8	 			dummy09;$/;"	m	struct:frame::<anonymous>
dummy09	can_82c200.h	/^	uint8	 			dummy09;$/;"	m	struct:canregs
dummy10	can_82c200.h	/^	    uint8	 			dummy10;$/;"	m	struct:frame::<anonymous>
dummy10	can_82c200.h	/^	uint8	 			dummy10;$/;"	m	struct:canregs
dummy11	can_82c200.h	/^	    uint8	 			dummy11;$/;"	m	struct:frame::<anonymous>
dummy11	can_82c200.h	/^	uint8	 			dummy11;$/;"	m	struct:canregs
dummy12	can_82c200.h	/^	    uint8	 			dummy12;$/;"	m	struct:frame::<anonymous>
dummy12	can_82c200.h	/^	uint8	 			dummy12;$/;"	m	struct:canregs
dummy13	can_82c200.h	/^	uint8	 			dummy13;$/;"	m	struct:canregs
dummy14	can_82c200.h	/^	uint8	 			dummy14;$/;"	m	struct:canregs
dummy15	can_82c200.h	/^	uint8	 			dummy15;$/;"	m	struct:canregs
dummy16	can_82c200.h	/^	uint8	 			dummy16;$/;"	m	struct:canregs
dummy17	can_82c200.h	/^	uint8	 			dummy17;$/;"	m	struct:canregs
dummy18	can_82c200.h	/^	uint8	 			dummy18;$/;"	m	struct:canregs
dummy19	can_82c200.h	/^	uint8	 			dummy19;$/;"	m	struct:canregs
dummy20	can_82c200.h	/^	uint8	 			dummy20;$/;"	m	struct:canregs
dummy21	can_82c200.h	/^	uint8	 			dummy21;$/;"	m	struct:canregs
dummy22	can_82c200.h	/^	uint8	 			dummy22;$/;"	m	struct:canregs
dummy23	can_82c200.h	/^	uint8	 			dummy23;$/;"	m	struct:canregs
dummy24	can_82c200.h	/^	uint8	 			dummy24;$/;"	m	struct:canregs
dummy25	can_82c200.h	/^	uint8	 			dummy25;$/;"	m	struct:canregs
dummy26	can_82c200.h	/^	uint8	 			dummy26;$/;"	m	struct:canregs
dummy27	can_82c200.h	/^	uint8	 			dummy27;$/;"	m	struct:canregs
dummy28	can_82c200.h	/^	uint8	 			dummy28;$/;"	m	struct:canregs
dummy29	can_82c200.h	/^	uint8	 			dummy29;$/;"	m	struct:canregs
dummy30	can_82c200.h	/^	uint8	 			dummy30;$/;"	m	struct:canregs
dummy31	can_82c200.h	/^	uint8	 			dummy31;$/;"	m	struct:canregs
dummy32	can_82c200.h	/^	uint8	 			dummy32;$/;"	m	struct:canregs
dummy33	can_82c200.h	/^	uint8	 			dummy33;$/;"	m	struct:canregs
dummy34	can_82c200.h	/^	uint8	 			dummy34;$/;"	m	struct:canregs
dummy35	can_82c200.h	/^	uint8	 			dummy35;$/;"	m	struct:canregs
dummy36	can_82c200.h	/^	uint8	 			dummy36;$/;"	m	struct:canregs
dummy37	can_82c200.h	/^	uint8	 			dummy37;$/;"	m	struct:canregs
dummy38	can_82c200.h	/^	uint8	 			dummy38;$/;"	m	struct:canregs
dummy39	can_82c200.h	/^	uint8	 			dummy39;$/;"	m	struct:canregs
dummy40	can_82c200.h	/^	uint8	 			dummy40;$/;"	m	struct:canregs
dummy41	can_82c200.h	/^	uint8	 			dummy41;$/;"	m	struct:canregs
dummy42	can_82c200.h	/^	uint8	 			dummy42;$/;"	m	struct:canregs
dummy43	can_82c200.h	/^	uint8	 			dummy43;$/;"	m	struct:canregs
dummy44	can_82c200.h	/^	uint8	 			dummy44;$/;"	m	struct:canregs
dummy45	can_82c200.h	/^	uint8	 			dummy45;$/;"	m	struct:canregs
dummy46	can_82c200.h	/^	uint8	 			dummy46;$/;"	m	struct:canregs
dummy47	can_82c200.h	/^	uint8	 			dummy47;$/;"	m	struct:canregs
dummy48	can_82c200.h	/^	uint8	 			dummy48;$/;"	m	struct:canregs
dummy49	can_82c200.h	/^	uint8	 			dummy49;$/;"	m	struct:canregs
dummy50	can_82c200.h	/^	uint8	 			dummy50;$/;"	m	struct:canregs
dummy51	can_82c200.h	/^	uint8	 			dummy51;$/;"	m	struct:canregs
dummy52	can_82c200.h	/^	uint8	 			dummy52;$/;"	m	struct:canregs
dummy53	can_82c200.h	/^	uint8	 			dummy53;$/;"	m	struct:canregs
dummy54	can_82c200.h	/^	uint8	 			dummy54;$/;"	m	struct:canregs
dummy55	can_82c200.h	/^	uint8	 			dummy55;$/;"	m	struct:canregs
dummy56	can_82c200.h	/^	uint8	 			dummy56;$/;"	m	struct:canregs
dummy57	can_82c200.h	/^	uint8	 			dummy57;$/;"	m	struct:canregs
dummy58	can_82c200.h	/^	uint8	 			dummy58;$/;"	m	struct:canregs
dummy59	can_82c200.h	/^	uint8	 			dummy59;$/;"	m	struct:canregs
dummy60	can_82c200.h	/^	uint8	 			dummy60;$/;"	m	struct:canregs
enable	can_defs.h	/^		unsigned    enable    : 1;$/;"	m	struct:
error	can4linux.h	/^    int error;	 		\/**< return value *\/$/;"	m	struct:Command_par
error	can4linux.h	/^    int error;	 		\/**< return value for errno *\/$/;"	m	struct:Config_par
error	can4linux.h	/^    int error;	 		\/**< return value for errno *\/$/;"	m	struct:ConfigureRTR_par
error	can4linux.h	/^    int error;	 		\/**< return value for errno *\/$/;"	m	struct:Receive_par
error	can4linux.h	/^    int error;	 		\/**< return value for errno *\/$/;"	m	struct:Send_par
error_code	can4linux.h	/^    unsigned int error_code;		\/**< content of error code register *\/$/;"	m	struct:CanSja1000Status_par
error_warning_limit	can4linux.h	/^    unsigned int error_warning_limit;	\/**< the error warning limit *\/$/;"	m	struct:CanSja1000Status_par
errorcode	can_82c200.h	/^	uint8	 errorcode;		\/* read only *\/$/;"	m	struct:canregs
errorwarninglimit	can_82c200.h	/^	uint8	 errorwarninglimit;$/;"	m	struct:canregs
extframe	can_82c200.h	/^	} extframe;$/;"	m	union:frame
filter	can_defs.h	/^	} filter[MAX_ID_NUMBER];$/;"	m	struct:
flags	can4linux.h	/^    int             flags;$/;"	m	struct:
frame	can_82c200.h	/^	union    frame frame;$/;"	m	struct:canregs
frame	can_82c200.h	/^union frame {$/;"	u
frameinfo	can_82c200.h	/^	uint8	 frameinfo;$/;"	m	struct:canregs
free	can_defs.h	/^	char free[MAX_BUFSIZE];$/;"	m	struct:
head	can_defs.h	/^	int head;$/;"	m	struct:
id	can4linux.h	/^    unsigned   long id;		 \/**< CAN message ID, 4 bytes  *\/$/;"	m	struct:
init_module	can_core.c	/^int init_module(void)$/;"	f
irq2minormap	can_util.c	/^ volatile int irq2minormap[15];$/;"	v
irq2pidmap	can_util.c	/^ volatile int irq2pidmap[15];$/;"	v
irq_handler_t	can_defs.h	/^ typedef void (*irq_handler_t)(int irq, void *unused, struct pt_regs *ptregs);$/;"	t
kernel_version	can_core.c	/^char kernel_version[] = UTS_RELEASE;$/;"	v
length	can4linux.h	/^    short      int  length;	 \/**< number of bytes in the CAN message *\/$/;"	m	struct:
message	can4linux.h	/^    unsigned message;		\/**< CAN message ID *\/$/;"	m	struct:ConfigureRTR_par
msg_fifo_t	can_defs.h	/^ } msg_fifo_t;$/;"	t
msg_filter_t	can_defs.h	/^ } msg_filter_t;$/;"	t
pcimod_scan	can_util.c	/^int pcimod_scan(void)$/;"	f
print_tty	Can_debug.c	/^void print_tty(const char *fmt, ...)$/;"	f
register_systables	can_sysctl.c	/^void register_systables(void)$/;"	f
reserved1	can_82c200.h	/^	uint8	 reserved1;		\/* 5 *\/$/;"	m	struct:canregs
reserved2	can_82c200.h	/^	uint8	 reserved2;		\/* 10 *\/$/;"	m	struct:canregs
reserved3	can_82c200.h	/^	uint8	 reserved3;$/;"	m	struct:canregs
reset_CPC_PCI	can_util.c	/^void reset_CPC_PCI(unsigned long address)$/;"	f
retval	can4linux.h	/^    unsigned long retval;		\/**< return value *\/$/;"	m	struct:CanSja1000Status_par
retval	can4linux.h	/^    unsigned long retval;	\/**< return value *\/$/;"	m	struct:Command_par
retval	can4linux.h	/^    unsigned long retval;	\/**< return value *\/$/;"	m	struct:Config_par
retval	can4linux.h	/^    unsigned long retval;	\/**< return value *\/$/;"	m	struct:ConfigureRTR_par
retval	can4linux.h	/^    unsigned long retval;	\/**< return value *\/$/;"	m	struct:Receive_par
retval	can4linux.h	/^    unsigned long retval;	\/**< return value *\/$/;"	m	struct:Send_par
rtr_response	can_defs.h	/^		canmsg_t    *rtr_response;$/;"	m	struct:
rx_buffer_size	can4linux.h	/^    unsigned int rx_buffer_size;	\/**< size of rx buffer  *\/$/;"	m	struct:CanSja1000Status_par
rx_buffer_used	can4linux.h	/^    unsigned int rx_buffer_used;	\/**< number of messages *\/$/;"	m	struct:CanSja1000Status_par
rx_errors	can4linux.h	/^    unsigned int rx_errors;		\/**< content of RX error counter *\/$/;"	m	struct:CanSja1000Status_par
rxerror	can_82c200.h	/^	uint8	 rxerror;$/;"	m	struct:canregs
signal	can_defs.h	/^		unsigned    signal    : 2;$/;"	m	struct:
signo	can_defs.h	/^	unsigned    signo[3];$/;"	m	struct:
status	can4linux.h	/^    unsigned char status;		\/**< CAN controller status register *\/$/;"	m	struct:CanSja1000Status_par
status	can_defs.h	/^        int status;$/;"	m	struct:
stdframe	can_82c200.h	/^	} stdframe;$/;"	m	union:frame
tail	can_defs.h	/^        int tail;$/;"	m	struct:
target	can4linux.h	/^    int target;			\/**< special configuration target *\/$/;"	m	struct:Config_par
timestamp	can4linux.h	/^    struct timeval  timestamp;	 \/**< time stamp for received messages *\/$/;"	m	struct:
timestamp	can_defs.h	/^		unsigned    timestamp : 1;$/;"	m	struct:
tx_buffer_size	can4linux.h	/^    unsigned int tx_buffer_size;	\/**< size of tx buffer  *\/$/;"	m	struct:CanSja1000Status_par
tx_buffer_used	can4linux.h	/^    unsigned int tx_buffer_used;	\/**< number of messages *\/$/;"	m	struct:CanSja1000Status_par
tx_errors	can4linux.h	/^    unsigned int tx_errors;		\/**< content of TX error counter *\/$/;"	m	struct:CanSja1000Status_par
txerror	can_82c200.h	/^	uint8	 txerror;		\/* 15 *\/$/;"	m	struct:canregs
uint8	can_82c200.h	/^typedef unsigned char uint8;$/;"	t
unregister_systables	can_sysctl.c	/^void unregister_systables(void)$/;"	f
unused	can_82c200.h	/^	uint8    unused;$/;"	m	struct:canregs
use	can_defs.h	/^	unsigned    use;$/;"	m	struct:
val1	can4linux.h	/^    unsigned long val1;		\/**< 1. parameter for the target *\/$/;"	m	struct:Config_par
val2	can4linux.h	/^    unsigned long val2;		\/**< 2. parameter for the target *\/$/;"	m	struct:Config_par
version	can_sysctl.c	/^char version[] = VERSION;$/;"	v
